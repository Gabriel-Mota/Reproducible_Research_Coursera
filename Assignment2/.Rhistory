add2 <- function(x,y){
x+y
}
3+5
above10 <- function(x){
use <- x > 10
x[use]
}
add2(3,5)
above10(1:25)
columnmean <- function(x){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc)
means[i] <- mean(y[,i])
means
}
columnmean(airquality)
columnmean <- function(x){
nc <- ncol(x)
means <- numeric(nc)
for(i in 1:nc)
means[i] <- mean(x[,i])
means
}
columnmean(airquality)
columnmean <- function(x){
nc <- ncol(x)
means <- numeric(nc)
for(i in 1:nc)
means[i] <- mean(x[,i], na.rm = TRUE)
means
}
columnmean(airquality)
cr <- corr(""/Users/Gabriel/Desktop/2013:2014/2014/R Programming/Assignement 2"/specdata", 150)
cr <- corr("/Users/Gabriel/Desktop/2013:2014/2014/R Programming/Assignement 2/specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
p <- getwd()
setwd(directory)
r <- NULL
id <- 1:332
for(i in id){
##Read files
if(i<100){
i <- formatC(i, digits=2, flag="0")
i<-paste(i, ".csv", sep ="")
}
else{
i<-paste(i, ".csv", sep = "")
}
x <- read.csv(i)
y <- x[complete.cases(x),]
nobs <- nrow(y)
if (nobs > threshold){
r <- c(r, cor(y$sulfate, y$nitrate))
}
}
if(is.null(r)){
r <- 0
}
setwd(p)
r
}
cr <- corr("/Users/Gabriel/Desktop/2013:2014/2014/R Programming/Assignement 2/specdata", 150)
head(cr)
summary(cr)
cr <- corr("/Users/Gabriel/Desktop/2013:2014/2014/R Programming/Assignement 2/specdata", 400)
head(cr)
cr <- corr("/Users/Gabriel/Desktop/2013:2014/2014/R Programming/Assignement 2/specdata", 5000)
summary(cr)
length(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
p <- getwd()
setwd(directory)
r <- NULL
id <- 1:332
for(i in id){
##Read files
if(i<100){
i <- formatC(i, digits=2, flag="0")
i<-paste(i, ".csv", sep ="")
}
else{
i<-paste(i, ".csv", sep = "")
}
x <- read.csv(i)
y <- x[complete.cases(x),]
nobs <- nrow(y)
if (nobs > threshold){
r <- c(r, cor(y$sulfate, y$nitrate))
}
}
setwd(p)
r
}
cr <- corr("/Users/Gabriel/Desktop/2013:2014/2014/R Programming/Assignement 2/specdata", 5000)
length(cr)
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
##1. Set the value of the matrix
##2. Get the value of the matrix
##3. Set the value of the mean
##4. Get the value of the mean
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
a <- makeCacheMatrix(matrix(1:4,2))
a$get()
a$getInverse()
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setInverse <- function(inverse) m <<- inverse
getInverse <- function() m
list(set = set, get = get,
setInverse = setInverse,
getInverse = getInverse)
}
a <- makeCacheMatrix(matrix(1:4,2))
a$get()
a$getInverse()
a$set(matrix(5:8,2))
a$get()
cacheSolve(a)
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setInverse <- function(inverse) m <<- inverse
getInverse <- function() m
list(set = set, get = get,
setInverse = setInverse,
getInverse = getInverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
a
a$get()
cacheSolve(a)
makeCacheMatrix <- function(x = matrix()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setInverse <- function(inverse) m <<- inverse
getInverse <- function() m
list(set = set, get = get,
setInverse = setInverse,
getInverse = getInverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
m <- x$getInverse()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setInverse(m)
m
}
a$get()
cacheSolve(a)
cacheSolve(a)
a$getInverse()
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, na.strings = "?")
data$Datetime <- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S")
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
data <- subset(data, Date >= '2007-02-01' & Date <= '2007-02-02')
setwd("~/Desktop/2013:2014/2014/Exploratory Data Analysis/Assignement 1")
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, na.strings = "?")
data$Datetime <- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S")
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
data <- subset(data, Date >= '2007-02-01' & Date <= '2007-02-02')
plot(data$Datetime, data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
par(mfrow = c(2,2))
plot(data$Datetime, data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(data$Datetime, data$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
points(data$Datetime, data$Sub_metering_2, type = "l", xlab = "", ylab = "Energy sub metering", col = "Red")
points(data$Datetime, data$Sub_metering_3, type = "l", xlab = "", ylab = "Energy sub metering", col = "Blue")
legend("topright", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1",
"Sub_metering_2", "Sub_metering_3"), bty = "n", )
legend("topright", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1",
"Sub_metering_2", "Sub_metering_3"), bty = "n")
legend("topright", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1",
"Sub_metering_2", "Sub_metering_3"), bty = "n", cex = 0.75)
par(par())
plot(data$Datetime, data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(data$Datetime, data$Voltage, type = "l", xlab = "", ylab = "Voltage")
plot(data$Datetime, data$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
points(data$Datetime, data$Sub_metering_2, type = "l", xlab = "", ylab = "Energy sub metering", col = "Red")
points(data$Datetime, data$Sub_metering_3, type = "l", xlab = "", ylab = "Energy sub metering", col = "Blue")
legend("topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n", cex = 0.75)
plot(data$Datetime, data$Global_reactive_power, type = "l", xlab = "", ylab = "Global Reactive Power")
dev.off()
plot(data$Datetime, data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(data$Datetime, data$Voltage, type = "l", xlab = "", ylab = "Voltage")
plot(data$Datetime, data$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
points(data$Datetime, data$Sub_metering_2, type = "l", xlab = "", ylab = "Energy sub metering", col = "Red")
points(data$Datetime, data$Sub_metering_3, type = "l", xlab = "", ylab = "Energy sub metering", col = "Blue")
legend("topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n", cex = 0.75)
plot(data$Datetime, data$Global_reactive_power, type = "l", xlab = "", ylab = "Global Reactive Power")
par(mfrow = c(2,2))
plot(data$Datetime, data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(data$Datetime, data$Voltage, type = "l", xlab = "", ylab = "Voltage")
plot(data$Datetime, data$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
points(data$Datetime, data$Sub_metering_2, type = "l", xlab = "", ylab = "Energy sub metering", col = "Red")
points(data$Datetime, data$Sub_metering_3, type = "l", xlab = "", ylab = "Energy sub metering", col = "Blue")
legend("topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n", cex = 0.75)
plot(data$Datetime, data$Global_reactive_power, type = "l", xlab = "", ylab = "Global Reactive Power")
plot(data$Datetime, data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(data$Datetime, data$Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
plot(data$Datetime, data$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
points(data$Datetime, data$Sub_metering_2, type = "l", xlab = "", ylab = "Energy sub metering", col = "Red")
points(data$Datetime, data$Sub_metering_3, type = "l", xlab = "", ylab = "Energy sub metering", col = "Blue")
legend("topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n", cex = 0.75)
plot(data$Datetime, data$Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global Reactive Power")
png(file = "plot4.png")
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, na.strings = "?")
data$Datetime <- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S")
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
data <- subset(data, Date >= '2007-02-01' & Date <= '2007-02-02')
##Plot1
plot(data$Datetime, data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
##Plot2
plot(data$Datetime, data$Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
##Plot3
plot(data$Datetime, data$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
points(data$Datetime, data$Sub_metering_2, type = "l", xlab = "", ylab = "Energy sub metering", col = "Red")
points(data$Datetime, data$Sub_metering_3, type = "l", xlab = "", ylab = "Energy sub metering", col = "Blue")
legend("topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n", cex = 0.75)
##Plot4
plot(data$Datetime, data$Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global Reactive Power")
dev.off()
png(file = "plot4.png")
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, na.strings = "?")
data$Datetime <- strptime(paste(data$Date, data$Time), "%d/%m/%Y %H:%M:%S")
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
data <- subset(data, Date >= '2007-02-01' & Date <= '2007-02-02')
par(mfrow = c(2,2))
##Plot1
plot(data$Datetime, data$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
##Plot2
plot(data$Datetime, data$Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
##Plot3
plot(data$Datetime, data$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
points(data$Datetime, data$Sub_metering_2, type = "l", xlab = "", ylab = "Energy sub metering", col = "Red")
points(data$Datetime, data$Sub_metering_3, type = "l", xlab = "", ylab = "Energy sub metering", col = "Blue")
legend("topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), bty = "n", cex = 0.75)
##Plot4
plot(data$Datetime, data$Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global Reactive Power")
dev.off()
png(file = "plot1.png")
png(file = "plot1.png")
data <- read.table("household_power_consumption.txt", sep=";", header = TRUE, na.strings = "?")
data$Time <- strptime(data$Time, format = "%H:%M:%S")
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
data <- subset(data, Date >= '2007-02-01' & Date <= '2007-02-02')
hist(data$Global_active_power, col = "Red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
dev.off()
head(data)
png(file = "plot1.png")
hist(data$Global_active_power, col = "Red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
dev.off()
hist(data$Global_active_power, col = "Red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
par(par())
hist(data$Global_active_power, col = "Red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
par()
par(mfrow = 1)
par(mfrow = c(1,1))
hist(data$Global_active_power, col = "Red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
png(file = "plot1.png")
hist(data$Global_active_power, col = "Red", main = "Global Active Power", xlab = "Global Active Power (kilowatts)")
dev.off()
setwd("~/Desktop/2013:2014/2014/Reproducible Research/Reproducible_Research_Coursera/Assignment2")
data <- read.csv("repdata-data-StormData", nrows = 100)
data <- read.csv("repdata-data-StormData.csv", nrows = 100)
head(data)
summary(data)
